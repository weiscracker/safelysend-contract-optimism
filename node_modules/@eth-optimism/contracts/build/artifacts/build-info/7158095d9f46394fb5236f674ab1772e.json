{
  "id": "7158095d9f46394fb5236f674ab1772e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol": {
        "content": "// SPDX-License-Identifier: CC0-1.0\n/* ERC1820 Pseudo-introspection Registry Contract\n * This standard defines a universal registry smart contract where any address (contract or regular account) can\n * register which interface it supports and which smart contract is responsible for its implementation.\n *\n * Written in 2019 by Jordi Baylina and Jacques Dafflon\n *\n * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to\n * this software to the public domain worldwide. This software is distributed without any warranty.\n *\n * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see\n * <http://creativecommons.org/publicdomain/zero/1.0/>.\n */\npragma solidity >0.5.0 <0.8.0;\n\n/// @dev The interface a contract MUST implement if it is the implementer of\n/// some (other) interface for any address other than itself.\ninterface ERC1820ImplementerInterface {\n    /// @notice Indicates whether the contract implements the interface 'interfaceHash' for the address 'addr' or not.\n    /// @param interfaceHash keccak256 hash of the name of the interface\n    /// @param addr Address for which the contract will implement the interface\n    /// @return ERC1820_ACCEPT_MAGIC only if the contract implements 'interfaceHash' for the address 'addr'.\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32);\n}\n\n/**\n * @title ERC1820 Pseudo-introspection Registry Contract\n * @author Jordi Baylina and Jacques Dafflon\n * @dev This contract is the official implementation of the ERC1820 Registry \n * For more details, see https://eips.ethereum.org/EIPS/eip-1820\n *\n * Compiler used: optimistic-solc\n * Runtime target: OVM\n */\ncontract ERC1820Registry {\n    bytes4 constant internal INVALID_ID = 0xffffffff;\n    bytes4 constant internal ERC165ID = 0x01ffc9a7;\n    bytes32 constant internal ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\n\n    mapping(address => mapping(bytes32 => address)) internal interfaces;\n    mapping(address => address) internal managers;\n    mapping(address => mapping(bytes4 => bool)) internal erc165Cached;\n\n    /// @notice Indicates a contract is the 'implementer' of 'interfaceHash' for 'addr'.\n    event InterfaceImplementerSet(address indexed addr, bytes32 indexed interfaceHash, address indexed implementer);\n    /// @notice Indicates 'newManager' is the address of the new manager for 'addr'.\n    event ManagerChanged(address indexed addr, address indexed newManager);\n\n    /// @notice Query if an address implements an interface and through which contract.\n    /// @param _addr Address being queried for the implementer of an interface.\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n    /// @return The address of the contract which implements the interface '_interfaceHash' for '_addr'\n    /// or '0' if '_addr' did not register an implementer for this interface.\n    function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\n        address addr = _addr == address(0) ? msg.sender : _addr;\n        if (isERC165Interface(_interfaceHash)) {\n            bytes4 erc165InterfaceHash = bytes4(_interfaceHash);\n            return implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0);\n        }\n        return interfaces[addr][_interfaceHash];\n    }\n\n    /// @notice Sets the contract which implements a specific interface for an address.\n    /// Only the manager defined for that address can set it.\n    /// (Each address is the manager for itself until it sets a new manager.)\n    /// @param _addr Address for which to set the interface.\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n    /// @param _implementer Contract address implementing '_interfaceHash' for '_addr'.\n    function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\n        address addr = _addr == address(0) ? msg.sender : _addr;\n        require(getManager(addr) == msg.sender, \"Not the manager\");\n\n        require(!isERC165Interface(_interfaceHash), \"Must not be an ERC165 hash\");\n        if (_implementer != address(0) && _implementer != msg.sender) {\n            require(\n                ERC1820ImplementerInterface(_implementer)\n                    .canImplementInterfaceForAddress(_interfaceHash, addr) == ERC1820_ACCEPT_MAGIC,\n                \"Does not implement the interface\"\n            );\n        }\n        interfaces[addr][_interfaceHash] = _implementer;\n        emit InterfaceImplementerSet(addr, _interfaceHash, _implementer);\n    }\n\n    /// @notice Sets '_newManager' as manager for '_addr'.\n    /// The new manager will be able to call 'setInterfaceImplementer' for '_addr'.\n    /// @param _addr Address for which to set the new manager.\n    /// @param _newManager Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)\n    function setManager(address _addr, address _newManager) external {\n        require(getManager(_addr) == msg.sender, \"Not the manager\");\n        managers[_addr] = _newManager == _addr ? address(0) : _newManager;\n        emit ManagerChanged(_addr, _newManager);\n    }\n\n    /// @notice Get the manager of an address.\n    /// @param _addr Address for which to return the manager.\n    /// @return Address of the manager for a given address.\n    function getManager(address _addr) public view returns(address) {\n        // By default the manager of an address is the same address\n        if (managers[_addr] == address(0)) {\n            return _addr;\n        } else {\n            return managers[_addr];\n        }\n    }\n\n    /// @notice Compute the keccak256 hash of an interface given its name.\n    /// @param _interfaceName Name of the interface.\n    /// @return The keccak256 hash of an interface name.\n    function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\n        return keccak256(abi.encodePacked(_interfaceName));\n    }\n\n    /* --- ERC165 Related Functions --- */\n    /* --- Developed in collaboration with William Entriken. --- */\n\n    /// @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n    /// @param _contract Address of the contract for which to update the cache.\n    /// @param _interfaceId ERC165 interface for which to update the cache.\n    function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\n        interfaces[_contract][_interfaceId] = implementsERC165InterfaceNoCache(\n            _contract, _interfaceId) ? _contract : address(0);\n        erc165Cached[_contract][_interfaceId] = true;\n    }\n\n    /// @notice Checks whether a contract implements an ERC165 interface or not.\n    //  If the result is not cached a direct lookup on the contract address is performed.\n    //  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n    //  'updateERC165Cache' with the contract address.\n    /// @param _contract Address of the contract to check.\n    /// @param _interfaceId ERC165 interface to check.\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\n    function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\n        if (!erc165Cached[_contract][_interfaceId]) {\n            return implementsERC165InterfaceNoCache(_contract, _interfaceId);\n        }\n        return interfaces[_contract][_interfaceId] == _contract;\n    }\n\n    /// @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n    /// @param _contract Address of the contract to check.\n    /// @param _interfaceId ERC165 interface to check.\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\n    function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\n        uint256 success;\n        uint256 result;\n\n        (success, result) = noThrowCall(_contract, ERC165ID);\n        if (success == 0 || result == 0) {\n            return false;\n        }\n\n        (success, result) = noThrowCall(_contract, INVALID_ID);\n        if (success == 0 || result != 0) {\n            return false;\n        }\n\n        (success, result) = noThrowCall(_contract, _interfaceId);\n        if (success == 1 && result == 1) {\n            return true;\n        }\n        return false;\n    }\n\n    /// @notice Checks whether the hash is a ERC165 interface (ending with 28 zeroes) or not.\n    /// @param _interfaceHash The hash to check.\n    /// @return True if '_interfaceHash' is an ERC165 interface (ending with 28 zeroes), false otherwise.\n    function isERC165Interface(bytes32 _interfaceHash) internal pure returns (bool) {\n        return _interfaceHash & 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0;\n    }\n\n    /// @dev Make a call on a contract without throwing if the function does not exist.\n    function noThrowCall(address _contract, bytes4 _interfaceId)\n        internal view returns (uint256 success, uint256 result)\n    {\n        bytes4 erc165ID = ERC165ID;\n\n        assembly {\n            let x := mload(0x40)               // Find empty storage location using \"free memory pointer\"\n            mstore(x, erc165ID)                // Place signature at beginning of empty storage\n            mstore(add(x, 0x04), _interfaceId) // Place first argument directly next to signature\n\n            success := staticcall(\n                30000,                         // 30k gas\n                _contract,                     // To addr\n                x,                             // Inputs are stored at location x\n                0x24,                          // Inputs are 36 (4 + 32) bytes long\n                x,                             // Store output over input (saves space)\n                0x20                           // Outputs are 32 bytes long\n            )\n\n            result := mload(x)                 // Load the result\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout",
            "storageLayout"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [],
    "contracts": {
      "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol": {
        "ERC1820ImplementerInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "interfaceHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "name": "canImplementInterfaceForAddress",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "canImplementInterfaceForAddress(bytes32,address)": "249cb3fa"
            }
          },
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "ERC1820Registry": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "interfaceHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementer",
                  "type": "address"
                }
              ],
              "name": "InterfaceImplementerSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newManager",
                  "type": "address"
                }
              ],
              "name": "ManagerChanged",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_interfaceHash",
                  "type": "bytes32"
                }
              ],
              "name": "getInterfaceImplementer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "getManager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "implementsERC165Interface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "implementsERC165InterfaceNoCache",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_interfaceName",
                  "type": "string"
                }
              ],
              "name": "interfaceHash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_interfaceHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_implementer",
                  "type": "address"
                }
              ],
              "name": "setInterfaceImplementer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_newManager",
                  "type": "address"
                }
              ],
              "name": "setManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "updateERC165Cache",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506108ea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a41e7d511161005b578063a41e7d51146101b7578063aabbb8ca146101ed578063b705676514610219578063f712f3e81461026357610088565b806329965a1d1461008d5780633d584063146100c55780635df8122f1461010757806365ba36c114610135575b600080fd5b6100c3600480360360608110156100a357600080fd5b506001600160a01b03813581169160208101359160409091013516610299565b005b6100eb600480360360208110156100db57600080fd5b50356001600160a01b0316610501565b604080516001600160a01b039092168252519081900360200190f35b6100c36004803603604081101561011d57600080fd5b506001600160a01b038135811691602001351661054b565b6101a56004803603602081101561014b57600080fd5b81019060208101813564010000000081111561016657600080fd5b82018360208201111561017857600080fd5b8035906020019184600183028401116401000000008311171561019a57600080fd5b509092509050610624565b60408051918252519081900360200190f35b6100c3600480360360408110156101cd57600080fd5b5080356001600160a01b031690602001356001600160e01b03191661065f565b6100eb6004803603604081101561020357600080fd5b506001600160a01b0381351690602001356106dc565b61024f6004803603604081101561022f57600080fd5b5080356001600160a01b031690602001356001600160e01b031916610753565b604080519115158252519081900360200190f35b61024f6004803603604081101561027957600080fd5b5080356001600160a01b031690602001356001600160e01b0319166107f5565b60006001600160a01b038416156102b057836102b2565b335b9050336102be82610501565b6001600160a01b03161461030b576040805162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b604482015290519081900360640190fd5b61031483610873565b15610366576040805162461bcd60e51b815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015290519081900360640190fd5b6001600160a01b0382161580159061038757506001600160a01b0382163314155b1561049d57604051602001808073455243313832305f4143434550545f4d4147494360601b815250601401905060405160208183030381529060405280519060200120826001600160a01b031663249cb3fa85846040518363ffffffff1660e01b815260040180838152602001826001600160a01b031681526020019250505060206040518083038186803b15801561041f57600080fd5b505afa158015610433573d6000803e3d6000fd5b505050506040513d602081101561044957600080fd5b50511461049d576040805162461bcd60e51b815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015290519081900360640190fd5b6001600160a01b0381811660008181526020818152604080832088845290915280822080546001600160a01b0319169487169485179055518692917f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15391a450505050565b6001600160a01b03818116600090815260016020526040812054909116610529575080610546565b506001600160a01b03808216600090815260016020526040902054165b919050565b3361055583610501565b6001600160a01b0316146105a2576040805162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b0316146105c157806105c4565b60005b6001600160a01b0383811660008181526001602052604080822080546001600160a01b0319169585169590951790945592519184169290917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a43509190a35050565b600082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090505b92915050565b6106698282610753565b610674576000610676565b815b6001600160a01b039283166000818152602081815260408083206001600160e01b03199690961680845295825280832080546001600160a01b0319169590971694909417909555908152600284528181209281529190925220805460ff19166001179055565b6000806001600160a01b038416156106f457836106f6565b335b905061070183610873565b15610727578261071182826107f5565b61071c57600061071e565b815b92505050610659565b6001600160a01b0390811660009081526020818152604080832086845290915290205416905092915050565b60008080610768856301ffc9a760e01b610880565b9092509050811580610778575080155b1561078857600092505050610659565b61079a856001600160e01b0319610880565b90925090508115806107ab57508015155b156107bb57600092505050610659565b6107c58585610880565b90925090506001821480156107da5750806001145b156107ea57600192505050610659565b506000949350505050565b6001600160a01b03821660009081526002602090815260408083206001600160e01b03198516845290915281205460ff1661083b576108348383610753565b9050610659565b506001600160a01b038083166000818152602081815260408083206001600160e01b0319871684529091529020549091161492915050565b6001600160e01b03161590565b6040516301ffc9a760e01b8082526004820183905260009182919060208160248189617530fa90519096909550935050505056fea26469706673582212204a8b300b6b0256abfb42b1cbfc51827a87dc082f1ac936fc751615a86cf1879b64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA41E7D51 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA41E7D51 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xAABBB8CA EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xB7056765 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xF712F3E8 EQ PUSH2 0x263 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x29965A1D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3D584063 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5DF8122F EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x65BA36C1 EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x54B JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x65F JUMP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x753 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x2B0 JUMPI DUP4 PUSH2 0x2B2 JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP CALLER PUSH2 0x2BE DUP3 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x30B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x314 DUP4 PUSH2 0x873 JUMP JUMPDEST ISZERO PUSH2 0x366 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206E6F7420626520616E204552433136352068617368000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x387 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x249CB3FA DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ PUSH2 0x49D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6573206E6F7420696D706C656D656E742074686520696E74657266616365 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP8 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD DUP7 SWAP3 SWAP2 PUSH32 0x93BAA6EFBD2244243BFEE6CE4CFDD1D04FC4C0E9A786ABD3A41313BD352DB153 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x529 JUMPI POP DUP1 PUSH2 0x546 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x555 DUP4 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C1 JUMPI DUP1 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 DUP6 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP2 DUP5 AND SWAP3 SWAP1 SWAP2 PUSH32 0x605C2DBF762E5F7D60A546D42E7205DCB1B011EBC62A61736A57C9089D3A4350 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x669 DUP3 DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x0 PUSH2 0x676 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP7 SWAP1 SWAP7 AND DUP1 DUP5 MSTORE SWAP6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP2 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x6F4 JUMPI DUP4 PUSH2 0x6F6 JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP PUSH2 0x701 DUP4 PUSH2 0x873 JUMP JUMPDEST ISZERO PUSH2 0x727 JUMPI DUP3 PUSH2 0x711 DUP3 DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x71C JUMPI PUSH1 0x0 PUSH2 0x71E JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x768 DUP6 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x880 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x778 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST PUSH2 0x79A DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0x880 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x7AB JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST PUSH2 0x7C5 DUP6 DUP6 PUSH2 0x880 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x7DA JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x7EA JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x83B JUMPI PUSH2 0x834 DUP4 DUP4 PUSH2 0x753 JUMP JUMPDEST SWAP1 POP PUSH2 0x659 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP10 PUSH2 0x7530 STATICCALL SWAP1 MLOAD SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP12 ADDRESS SIGNEXTEND PUSH12 0x256ABFB42B1CBFC51827A87 0xDC ADDMOD 0x2F BYTE 0xC9 CALLDATASIZE 0xFC PUSH22 0x1615A86CF1879B64736F6C6343000706003300000000 ",
              "sourceMap": "1777:8732:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063a41e7d511161005b578063a41e7d51146101b7578063aabbb8ca146101ed578063b705676514610219578063f712f3e81461026357610088565b806329965a1d1461008d5780633d584063146100c55780635df8122f1461010757806365ba36c114610135575b600080fd5b6100c3600480360360608110156100a357600080fd5b506001600160a01b03813581169160208101359160409091013516610299565b005b6100eb600480360360208110156100db57600080fd5b50356001600160a01b0316610501565b604080516001600160a01b039092168252519081900360200190f35b6100c36004803603604081101561011d57600080fd5b506001600160a01b038135811691602001351661054b565b6101a56004803603602081101561014b57600080fd5b81019060208101813564010000000081111561016657600080fd5b82018360208201111561017857600080fd5b8035906020019184600183028401116401000000008311171561019a57600080fd5b509092509050610624565b60408051918252519081900360200190f35b6100c3600480360360408110156101cd57600080fd5b5080356001600160a01b031690602001356001600160e01b03191661065f565b6100eb6004803603604081101561020357600080fd5b506001600160a01b0381351690602001356106dc565b61024f6004803603604081101561022f57600080fd5b5080356001600160a01b031690602001356001600160e01b031916610753565b604080519115158252519081900360200190f35b61024f6004803603604081101561027957600080fd5b5080356001600160a01b031690602001356001600160e01b0319166107f5565b60006001600160a01b038416156102b057836102b2565b335b9050336102be82610501565b6001600160a01b03161461030b576040805162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b604482015290519081900360640190fd5b61031483610873565b15610366576040805162461bcd60e51b815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015290519081900360640190fd5b6001600160a01b0382161580159061038757506001600160a01b0382163314155b1561049d57604051602001808073455243313832305f4143434550545f4d4147494360601b815250601401905060405160208183030381529060405280519060200120826001600160a01b031663249cb3fa85846040518363ffffffff1660e01b815260040180838152602001826001600160a01b031681526020019250505060206040518083038186803b15801561041f57600080fd5b505afa158015610433573d6000803e3d6000fd5b505050506040513d602081101561044957600080fd5b50511461049d576040805162461bcd60e51b815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015290519081900360640190fd5b6001600160a01b0381811660008181526020818152604080832088845290915280822080546001600160a01b0319169487169485179055518692917f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15391a450505050565b6001600160a01b03818116600090815260016020526040812054909116610529575080610546565b506001600160a01b03808216600090815260016020526040902054165b919050565b3361055583610501565b6001600160a01b0316146105a2576040805162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b0316146105c157806105c4565b60005b6001600160a01b0383811660008181526001602052604080822080546001600160a01b0319169585169590951790945592519184169290917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a43509190a35050565b600082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090505b92915050565b6106698282610753565b610674576000610676565b815b6001600160a01b039283166000818152602081815260408083206001600160e01b03199690961680845295825280832080546001600160a01b0319169590971694909417909555908152600284528181209281529190925220805460ff19166001179055565b6000806001600160a01b038416156106f457836106f6565b335b905061070183610873565b15610727578261071182826107f5565b61071c57600061071e565b815b92505050610659565b6001600160a01b0390811660009081526020818152604080832086845290915290205416905092915050565b60008080610768856301ffc9a760e01b610880565b9092509050811580610778575080155b1561078857600092505050610659565b61079a856001600160e01b0319610880565b90925090508115806107ab57508015155b156107bb57600092505050610659565b6107c58585610880565b90925090506001821480156107da5750806001145b156107ea57600192505050610659565b506000949350505050565b6001600160a01b03821660009081526002602090815260408083206001600160e01b03198516845290915281205460ff1661083b576108348383610753565b9050610659565b506001600160a01b038083166000818152602081815260408083206001600160e01b0319871684529091529020549091161492915050565b6001600160e01b03161590565b6040516301ffc9a760e01b8082526004820183905260009182919060208160248189617530fa90519096909550935050505056fea26469706673582212204a8b300b6b0256abfb42b1cbfc51827a87dc082f1ac936fc751615a86cf1879b64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA41E7D51 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA41E7D51 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xAABBB8CA EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xB7056765 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xF712F3E8 EQ PUSH2 0x263 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x29965A1D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3D584063 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5DF8122F EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x65BA36C1 EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x54B JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x65F JUMP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x753 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x2B0 JUMPI DUP4 PUSH2 0x2B2 JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP CALLER PUSH2 0x2BE DUP3 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x30B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x314 DUP4 PUSH2 0x873 JUMP JUMPDEST ISZERO PUSH2 0x366 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206E6F7420626520616E204552433136352068617368000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x387 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x249CB3FA DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x433 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ PUSH2 0x49D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6573206E6F7420696D706C656D656E742074686520696E74657266616365 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP8 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD DUP7 SWAP3 SWAP2 PUSH32 0x93BAA6EFBD2244243BFEE6CE4CFDD1D04FC4C0E9A786ABD3A41313BD352DB153 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x529 JUMPI POP DUP1 PUSH2 0x546 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x555 DUP4 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C1 JUMPI DUP1 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 DUP6 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP2 DUP5 AND SWAP3 SWAP1 SWAP2 PUSH32 0x605C2DBF762E5F7D60A546D42E7205DCB1B011EBC62A61736A57C9089D3A4350 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x669 DUP3 DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x0 PUSH2 0x676 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP7 SWAP1 SWAP7 AND DUP1 DUP5 MSTORE SWAP6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP2 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x6F4 JUMPI DUP4 PUSH2 0x6F6 JUMP JUMPDEST CALLER JUMPDEST SWAP1 POP PUSH2 0x701 DUP4 PUSH2 0x873 JUMP JUMPDEST ISZERO PUSH2 0x727 JUMPI DUP3 PUSH2 0x711 DUP3 DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x71C JUMPI PUSH1 0x0 PUSH2 0x71E JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x768 DUP6 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x880 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x778 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST PUSH2 0x79A DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0x880 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x7AB JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST PUSH2 0x7C5 DUP6 DUP6 PUSH2 0x880 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x7DA JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x7EA JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x659 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x83B JUMPI PUSH2 0x834 DUP4 DUP4 PUSH2 0x753 JUMP JUMPDEST SWAP1 POP PUSH2 0x659 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP10 PUSH2 0x7530 STATICCALL SWAP1 MLOAD SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP12 ADDRESS SIGNEXTEND PUSH12 0x256ABFB42B1CBFC51827A87 0xDC ADDMOD 0x2F BYTE 0xC9 CALLDATASIZE 0xFC PUSH22 0x1615A86CF1879B64736F6C6343000706003300000000 ",
              "sourceMap": "1777:8732:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4286:785;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4286:785:0;;;;;;;;;;;;;;;;;:::i;:::-;;5835:273;;;;;;;;;;;;;;;;-1:-1:-1;5835:273:0;-1:-1:-1;;;;;5835:273:0;;:::i;:::-;;;;-1:-1:-1;;;;;5835:273:0;;;;;;;;;;;;;;5395:265;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5395:265:0;;;;;;;;;;:::i;6299:153::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6299:153:0;;-1:-1:-1;6299:153:0;-1:-1:-1;6299:153:0;:::i;:::-;;;;;;;;;;;;;;;;6825:280;;;;;;;;;;;;;;;;-1:-1:-1;6825:280:0;;-1:-1:-1;;;;;6825:280:0;;;;;-1:-1:-1;;;;;;6825:280:0;;:::i;3198:442::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3198:442:0;;;;;;;;:::i;8283:618::-;;;;;;;;;;;;;;;;-1:-1:-1;8283:618:0;;-1:-1:-1;;;;;8283:618:0;;;;;-1:-1:-1;;;;;;8283:618:0;;:::i;:::-;;;;;;;;;;;;;;;;;;7649:316;;;;;;;;;;;;;;;;-1:-1:-1;7649:316:0;;-1:-1:-1;;;;;7649:316:0;;;;;-1:-1:-1;;;;;;7649:316:0;;:::i;4286:785::-;4399:12;-1:-1:-1;;;;;4414:19:0;;;:40;;4449:5;4414:40;;;4436:10;4414:40;4399:55;-1:-1:-1;4492:10:0;4472:16;4399:55;4472:10;:16::i;:::-;-1:-1:-1;;;;;4472:30:0;;4464:58;;;;;-1:-1:-1;;;4464:58:0;;;;;;;;;;;;-1:-1:-1;;;4464:58:0;;;;;;;;;;;;;;;4542:33;4560:14;4542:17;:33::i;:::-;4541:34;4533:73;;;;;-1:-1:-1;;;4533:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4620:26:0;;;;;;:56;;-1:-1:-1;;;;;;4650:26:0;;4666:10;4650:26;;4620:56;4616:318;;;1973:40;;;;;;-1:-1:-1;;;1973:40:0;;;;;;;;;;;;;;;;;;;1963:51;;;;;;4745:12;-1:-1:-1;;;;;4717:94:0;;4812:14;4828:4;4717:116;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4717:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4717:116:0;:140;4692:231;;;;;-1:-1:-1;;;4692:231:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4943:16:0;;;:10;:16;;;;;;;;;;;:32;;;;;;;;;:47;;-1:-1:-1;;;;;;4943:47:0;;;;;;;;;5005:59;4943:32;;:16;5005:59;;;4286:785;;;;:::o;5835:273::-;-1:-1:-1;;;;;5981:15:0;;;5890:7;5981:15;;;:8;:15;;;;;;5890:7;;5981:15;5977:125;;-1:-1:-1;6033:5:0;6026:12;;5977:125;-1:-1:-1;;;;;;6076:15:0;;;;;;;:8;:15;;;;;;;5977:125;5835:273;;;:::o;5395:265::-;5499:10;5478:17;5489:5;5478:10;:17::i;:::-;-1:-1:-1;;;;;5478:31:0;;5470:59;;;;;-1:-1:-1;;;5470:59:0;;;;;;;;;;;;-1:-1:-1;;;5470:59:0;;;;;;;;;;;;;;;5572:5;-1:-1:-1;;;;;5557:20:0;:11;-1:-1:-1;;;;;5557:20:0;;:47;;5593:11;5557:47;;;5588:1;5557:47;-1:-1:-1;;;;;5539:15:0;;;;;;;:8;:15;;;;;;:65;;-1:-1:-1;;;;;;5539:65:0;;;;;;;;;;;5619:34;;;;;;5539:15;;5619:34;;5539:15;5619:34;5395:265;;:::o;6299:153::-;6376:7;6429:14;;6412:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6402:43;;;;;;6395:50;;6299:153;;;;;:::o;6825:280::-;6949:70;6995:9;7006:12;6949:32;:70::i;:::-;:95;;7042:1;6949:95;;;7022:9;6949:95;-1:-1:-1;;;;;6911:21:0;;;:10;:21;;;;;;;;;;;-1:-1:-1;;;;;;6911:35:0;;;;;;;;;;;;;:133;;-1:-1:-1;;;;;;6911:133:0;;;;;;;;;;;;7054:23;;;:12;:23;;;;;:37;;;;;;;;:44;;-1:-1:-1;;7054:44:0;-1:-1:-1;7054:44:0;;;6825:280::o;3198:442::-;3293:7;;-1:-1:-1;;;;;3327:19:0;;;:40;;3362:5;3327:40;;;3349:10;3327:40;3312:55;;3381:33;3399:14;3381:17;:33::i;:::-;3377:208;;;3466:14;3502:52;3528:4;3466:14;3502:25;:52::i;:::-;:72;;3572:1;3502:72;;;3557:4;3502:72;3495:79;;;;;;3377:208;-1:-1:-1;;;;;3601:16:0;;;:10;:16;;;;;;;;;;;:32;;;;;;;;;;;-1:-1:-1;3198:442:0;;;;:::o;8283:618::-;8386:4;;;8472:32;8484:9;-1:-1:-1;;;8472:11:0;:32::i;:::-;8452:52;;-1:-1:-1;8452:52:0;-1:-1:-1;8518:12:0;;;:27;;-1:-1:-1;8534:11:0;;8518:27;8514:70;;;8568:5;8561:12;;;;;;8514:70;8614:34;8626:9;-1:-1:-1;;;;;;8614:11:0;:34::i;:::-;8594:54;;-1:-1:-1;8594:54:0;-1:-1:-1;8662:12:0;;;:27;;-1:-1:-1;8678:11:0;;;8662:27;8658:70;;;8712:5;8705:12;;;;;;8658:70;8758:36;8770:9;8781:12;8758:11;:36::i;:::-;8738:56;;-1:-1:-1;8738:56:0;-1:-1:-1;8819:1:0;8808:12;;:27;;;;;8824:6;8834:1;8824:11;8808:27;8804:69;;;8858:4;8851:11;;;;;;8804:69;-1:-1:-1;8889:5:0;;8283:618;-1:-1:-1;;;;8283:618:0:o;7649:316::-;-1:-1:-1;;;;;7766:23:0;;7745:4;7766:23;;;:12;:23;;;;;;;;-1:-1:-1;;;;;;7766:37:0;;;;;;;;;;;;7761:133;;7826:57;7859:9;7870:12;7826:32;:57::i;:::-;7819:64;;;;7761:133;-1:-1:-1;;;;;;7910:48:0;;;:10;:21;;;;;;;;;;;-1:-1:-1;;;;;;7910:35:0;;;;;;;;;;;;;:48;7649:316;;;;:::o;9156:192::-;-1:-1:-1;;;;;9253:83:0;:88;;9156:192::o;9442:1065::-;9656:4;9650:11;-1:-1:-1;;;9747:19:0;;;9857:4;9850:12;;9843:34;;;9534:15;;;;9599:8;10351:4;9650:11;10179:4;9650:11;10039:9;9981:5;9953:471;10448:8;;9942:482;;10448:8;;-1:-1:-1;9627:874:0;-1:-1:-1;;;;9627:874:0:o"
            },
            "methodIdentifiers": {
              "getInterfaceImplementer(address,bytes32)": "aabbb8ca",
              "getManager(address)": "3d584063",
              "implementsERC165Interface(address,bytes4)": "f712f3e8",
              "implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
              "interfaceHash(string)": "65ba36c1",
              "setInterfaceImplementer(address,bytes32,address)": "29965a1d",
              "setManager(address,address)": "5df8122f",
              "updateERC165Cache(address,bytes4)": "a41e7d51"
            }
          },
          "storageLayout": {
            "storage": [
              {
                "astId": 34,
                "contract": "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol:ERC1820Registry",
                "label": "interfaces",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_address))"
              },
              {
                "astId": 38,
                "contract": "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol:ERC1820Registry",
                "label": "managers",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 44,
                "contract": "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol:ERC1820Registry",
                "label": "erc165Cached",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_bytes4": {
                "encoding": "inplace",
                "label": "bytes4",
                "numberOfBytes": "4"
              },
              "t_mapping(t_address,t_address)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_address,t_mapping(t_bytes32,t_address))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(bytes32 => address))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_bytes32,t_address)"
              },
              "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(bytes4 => bool))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_bytes4,t_bool)"
              },
              "t_mapping(t_bytes32,t_address)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_bytes4,t_bool)": {
                "encoding": "mapping",
                "key": "t_bytes4",
                "label": "mapping(bytes4 => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              }
            }
          }
        },
        "ERC1820ImplementerInterface-ovm": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "interfaceHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "name": "canImplementInterfaceForAddress",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "canImplementInterfaceForAddress(bytes32,address)": "249cb3fa"
            }
          },
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "ERC1820Registry-ovm": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "interfaceHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementer",
                  "type": "address"
                }
              ],
              "name": "InterfaceImplementerSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newManager",
                  "type": "address"
                }
              ],
              "name": "ManagerChanged",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_interfaceHash",
                  "type": "bytes32"
                }
              ],
              "name": "getInterfaceImplementer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "getManager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "implementsERC165Interface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "implementsERC165InterfaceNoCache",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_interfaceName",
                  "type": "string"
                }
              ],
              "name": "interfaceHash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_interfaceHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_implementer",
                  "type": "address"
                }
              ],
              "name": "setInterfaceImplementer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_newManager",
                  "type": "address"
                }
              ],
              "name": "setManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "updateERC165Cache",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523480156100195760008061001661001f565b50505b5061008a565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561005757808601518282016040015260200161003c565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b610dad806100996000396000f3fe608060405234801561001957600080610016610b17565b50505b50600436106100915760003560e01c8063a41e7d5111610064578063a41e7d5114610208578063aabbb8ca14610247578063b70567651461027c578063f712f3e8146102cf57610091565b806329965a1d1461009f5780633d584063146100e05780635df8122f1461012b57806365ba36c114610162575b60008061009c610b17565b50505b6100de600480360360608110156100be576000806100bb610b17565b50505b506001600160a01b0381358116916020810135916040909101351661030e565b005b61010f600480360360208110156100ff576000806100fc610b17565b50505b50356001600160a01b0316610629565b6040516001600160a01b03909116815260200160405180910390f35b6100de6004803603604081101561014a57600080610147610b17565b50505b506001600160a01b03813581169160200135166106ae565b6101f6600480360360208110156101815760008061017e610b17565b50505b8101906020810181356401000000008111156101a5576000806101a2610b17565b50505b8201836020820111156101c0576000806101bd610b17565b50505b803590602001918460018302840111640100000000831117156101eb576000806101e8610b17565b50505b5090925090506107cc565b60405190815260200160405180910390f35b6100de6004803603604081101561022757600080610224610b17565b50505b5080356001600160a01b031690602001356001600160e01b031916610806565b61010f6004803603604081101561026657600080610263610b17565b50505b506001600160a01b0381351690602001356108db565b6102bb6004803603604081101561029b57600080610298610b17565b50505b5080356001600160a01b031690602001356001600160e01b031916610978565b604051901515815260200160405180910390f35b6102bb600480360360408110156102ee576000806102eb610b17565b50505b5080356001600160a01b031690602001356001600160e01b031916610a1a565b60006001600160a01b03841615610325578361032e565b5a61032e610b82565b90505a610339610b82565b6001600160a01b031661034b82610629565b6001600160a01b0316146103a05760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b60448201526064016040518091039061039d610b17565b50505b6103a983610acd565b156104035760405162461bcd60e51b815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015260640160405180910390610400610b17565b50505b6001600160a01b0382161580159061043557505a61041f610b82565b6001600160a01b0316826001600160a01b031614155b156105895760405173455243313832305f4143434550545f4d4147494360601b602082015260340160405160208183030381529060405280519060200120826001600160a01b031663249cb3fa85846040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160206040518083038186806104c4610bdc565b1580156104d9576000806104d6610b17565b50505b505a6104e3610c28565b5050505050158015610502573d6000803e3d60006104ff610b17565b50505b505050506040513d60208110156105215760008061051e610b17565b50505b8101908080519390931492506105899150505760405162461bcd60e51b815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015260640160405180910390610586610b17565b50505b6001600160a01b038116600090815260208190528290604090206000858152602091909152604090206001816105bd610d13565b816001600160a01b0302191690836001600160a01b03160217906105df610d5f565b505050816001600160a01b031683826001600160a01b03167f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15360405160405180910390a450505050565b6001600160a01b03811660009081526001602052806040812060009061064d610d13565b906101000a90046001600160a01b03166001600160a01b031614156106735750806106a9565b6001600160a01b0382166000908152600160205260409020600090610696610d13565b906101000a90046001600160a01b031690505b919050565b5a6106b7610b82565b6001600160a01b03166106c983610629565b6001600160a01b03161461071e5760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b60448201526064016040518091039061071b610b17565b50505b816001600160a01b0316816001600160a01b03161461073d5780610740565b60005b6001600160a01b0383166000908152600160205260409020600181610763610d13565b816001600160a01b0302191690836001600160a01b0316021790610785610d5f565b505050806001600160a01b0316826001600160a01b03167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a35050565b6000828260405160200180838380828437919091019350604092505050516020818303038152906040528051906020012090505b92915050565b6108108282610978565b61081b57600061081d565b815b6001600160a01b03831660009081526020819052604090206001600160e01b0319831660009081526020919091526040902060018161085a610d13565b816001600160a01b0302191690836001600160a01b031602179061087c610d5f565b5050506001600160a01b03821660009081526002602052600190604090206001600160e01b031983166000908152602091909152604090206001816108bf610d13565b8160ff021916908315150217906108d4610d5f565b5050505050565b6000806001600160a01b038416156108f357836108fc565b5a6108fc610b82565b905061090783610acd565b1561092d57826109178282610a1a565b610922576000610924565b815b92505050610800565b6001600160a01b038116600090815260208190526040902060008481526020919091526040902060009061095f610d13565b906101000a90046001600160a01b031691505092915050565b6000808061098d856301ffc9a760e01b610ada565b909250905081158061099d575080155b156109ad57600092505050610800565b6109bf856001600160e01b0319610ada565b90925090508115806109d057508015155b156109e057600092505050610800565b6109ea8585610ada565b90925090506001821480156109ff5750806001145b15610a0f57600192505050610800565b506000949350505050565b6001600160a01b03821660009081526002602052604081206001600160e01b03198316600090815260209190915260409020600090610a57610d13565b906101000a900460ff16610a7657610a6f8383610978565b9050610800565b6001600160a01b03831660008181526020819052604090206001600160e01b03198416600090815260209190915260409020600090610ab3610d13565b6001600160a01b036101009290920a900416149392505050565b6001600160e01b03161590565b6000806301ffc9a760e01b60405181815284600482015260208160248389617530610b03610c28565b505050505093508051925050509250929050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610b4f578086015182820160400152602001610b34565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015610bd757600082820152602001610bc0565b505050565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020610bc0565b638540661f598160e01b8152610c59565b8080831115610800575090919050565b8080831015610800575090919050565b836004820152846024820152606060448201528660648201526084810160005b88811015610c91578088015182820152602001610c79565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af15059610ce68d3d610c49565b8c01610cf28187610c39565b5b82811015610d075760008152602001610cf3565b50929c50505050505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020610bc0565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b600081526020610bc056",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16 PUSH2 0x1F JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x8A JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x57 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDAD DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA41E7D51 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA41E7D51 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xAABBB8CA EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xB7056765 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xF712F3E8 EQ PUSH2 0x2CF JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x29965A1D EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3D584063 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x5DF8122F EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x65BA36C1 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9C PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 PUSH2 0xBB PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x30E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 PUSH2 0xFC PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 PUSH2 0x147 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 PUSH2 0x17E PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1A2 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1BD PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 PUSH2 0x1E8 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 PUSH2 0x224 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x806 JUMP JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 PUSH2 0x263 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8DB JUMP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 PUSH2 0x298 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2EB PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x325 JUMPI DUP4 PUSH2 0x32E JUMP JUMPDEST GAS PUSH2 0x32E PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP GAS PUSH2 0x339 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34B DUP3 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x39D PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x3A9 DUP4 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206E6F7420626520616E204552433136352068617368000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x400 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x435 JUMPI POP GAS PUSH2 0x41F PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x249CB3FA DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x4C4 PUSH2 0xBDC JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4D6 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x4E3 PUSH2 0xC28 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x4FF PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 PUSH2 0x51E PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP4 SWAP1 SWAP4 EQ SWAP3 POP PUSH2 0x589 SWAP2 POP POP JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6573206E6F7420696D706C656D656E742074686520696E74657266616365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x586 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x5BD PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x5DF PUSH2 0xD5F JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x93BAA6EFBD2244243BFEE6CE4CFDD1D04FC4C0E9A786ABD3A41313BD352DB153 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x64D PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x673 JUMPI POP DUP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x696 PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST GAS PUSH2 0x6B7 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C9 DUP4 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x71B PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x73D JUMPI DUP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x763 PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x785 PUSH2 0xD5F JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x605C2DBF762E5F7D60A546D42E7205DCB1B011EBC62A61736A57C9089D3A4350 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP4 POP PUSH1 0x40 SWAP3 POP POP POP MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x810 DUP3 DUP3 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x81B JUMPI PUSH1 0x0 PUSH2 0x81D JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x85A PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x87C PUSH2 0xD5F JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x8BF PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x8D4 PUSH2 0xD5F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x8F3 JUMPI DUP4 PUSH2 0x8FC JUMP JUMPDEST GAS PUSH2 0x8FC PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP PUSH2 0x907 DUP4 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0x92D JUMPI DUP3 PUSH2 0x917 DUP3 DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x922 JUMPI PUSH1 0x0 PUSH2 0x924 JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x95F PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x98D DUP6 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x99D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST PUSH2 0x9BF DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x9D0 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST PUSH2 0x9EA DUP6 DUP6 PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x9FF JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0xA0F JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xA57 PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA76 JUMPI PUSH2 0xA6F DUP4 DUP4 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xAB3 PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 DUP10 PUSH2 0x7530 PUSH2 0xB03 PUSH2 0xC28 JUMP JUMPDEST POP POP POP POP POP SWAP4 POP DUP1 MLOAD SWAP3 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xB4F JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB34 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBC0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x8435035B MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xC59 JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0x800 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0x800 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0xC91 JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC79 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0xCE6 DUP14 RETURNDATASIZE PUSH2 0xC49 JUMP JUMPDEST DUP13 ADD PUSH2 0xCF2 DUP2 DUP8 PUSH2 0xC39 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD07 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF3 JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0xBC0 JUMP ",
              "sourceMap": "1777:8732:0:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001957600080610016610b17565b50505b50600436106100915760003560e01c8063a41e7d5111610064578063a41e7d5114610208578063aabbb8ca14610247578063b70567651461027c578063f712f3e8146102cf57610091565b806329965a1d1461009f5780633d584063146100e05780635df8122f1461012b57806365ba36c114610162575b60008061009c610b17565b50505b6100de600480360360608110156100be576000806100bb610b17565b50505b506001600160a01b0381358116916020810135916040909101351661030e565b005b61010f600480360360208110156100ff576000806100fc610b17565b50505b50356001600160a01b0316610629565b6040516001600160a01b03909116815260200160405180910390f35b6100de6004803603604081101561014a57600080610147610b17565b50505b506001600160a01b03813581169160200135166106ae565b6101f6600480360360208110156101815760008061017e610b17565b50505b8101906020810181356401000000008111156101a5576000806101a2610b17565b50505b8201836020820111156101c0576000806101bd610b17565b50505b803590602001918460018302840111640100000000831117156101eb576000806101e8610b17565b50505b5090925090506107cc565b60405190815260200160405180910390f35b6100de6004803603604081101561022757600080610224610b17565b50505b5080356001600160a01b031690602001356001600160e01b031916610806565b61010f6004803603604081101561026657600080610263610b17565b50505b506001600160a01b0381351690602001356108db565b6102bb6004803603604081101561029b57600080610298610b17565b50505b5080356001600160a01b031690602001356001600160e01b031916610978565b604051901515815260200160405180910390f35b6102bb600480360360408110156102ee576000806102eb610b17565b50505b5080356001600160a01b031690602001356001600160e01b031916610a1a565b60006001600160a01b03841615610325578361032e565b5a61032e610b82565b90505a610339610b82565b6001600160a01b031661034b82610629565b6001600160a01b0316146103a05760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b60448201526064016040518091039061039d610b17565b50505b6103a983610acd565b156104035760405162461bcd60e51b815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015260640160405180910390610400610b17565b50505b6001600160a01b0382161580159061043557505a61041f610b82565b6001600160a01b0316826001600160a01b031614155b156105895760405173455243313832305f4143434550545f4d4147494360601b602082015260340160405160208183030381529060405280519060200120826001600160a01b031663249cb3fa85846040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160206040518083038186806104c4610bdc565b1580156104d9576000806104d6610b17565b50505b505a6104e3610c28565b5050505050158015610502573d6000803e3d60006104ff610b17565b50505b505050506040513d60208110156105215760008061051e610b17565b50505b8101908080519390931492506105899150505760405162461bcd60e51b815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015260640160405180910390610586610b17565b50505b6001600160a01b038116600090815260208190528290604090206000858152602091909152604090206001816105bd610d13565b816001600160a01b0302191690836001600160a01b03160217906105df610d5f565b505050816001600160a01b031683826001600160a01b03167f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15360405160405180910390a450505050565b6001600160a01b03811660009081526001602052806040812060009061064d610d13565b906101000a90046001600160a01b03166001600160a01b031614156106735750806106a9565b6001600160a01b0382166000908152600160205260409020600090610696610d13565b906101000a90046001600160a01b031690505b919050565b5a6106b7610b82565b6001600160a01b03166106c983610629565b6001600160a01b03161461071e5760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b60448201526064016040518091039061071b610b17565b50505b816001600160a01b0316816001600160a01b03161461073d5780610740565b60005b6001600160a01b0383166000908152600160205260409020600181610763610d13565b816001600160a01b0302191690836001600160a01b0316021790610785610d5f565b505050806001600160a01b0316826001600160a01b03167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a35050565b6000828260405160200180838380828437919091019350604092505050516020818303038152906040528051906020012090505b92915050565b6108108282610978565b61081b57600061081d565b815b6001600160a01b03831660009081526020819052604090206001600160e01b0319831660009081526020919091526040902060018161085a610d13565b816001600160a01b0302191690836001600160a01b031602179061087c610d5f565b5050506001600160a01b03821660009081526002602052600190604090206001600160e01b031983166000908152602091909152604090206001816108bf610d13565b8160ff021916908315150217906108d4610d5f565b5050505050565b6000806001600160a01b038416156108f357836108fc565b5a6108fc610b82565b905061090783610acd565b1561092d57826109178282610a1a565b610922576000610924565b815b92505050610800565b6001600160a01b038116600090815260208190526040902060008481526020919091526040902060009061095f610d13565b906101000a90046001600160a01b031691505092915050565b6000808061098d856301ffc9a760e01b610ada565b909250905081158061099d575080155b156109ad57600092505050610800565b6109bf856001600160e01b0319610ada565b90925090508115806109d057508015155b156109e057600092505050610800565b6109ea8585610ada565b90925090506001821480156109ff5750806001145b15610a0f57600192505050610800565b506000949350505050565b6001600160a01b03821660009081526002602052604081206001600160e01b03198316600090815260209190915260409020600090610a57610d13565b906101000a900460ff16610a7657610a6f8383610978565b9050610800565b6001600160a01b03831660008181526020819052604090206001600160e01b03198416600090815260209190915260409020600090610ab3610d13565b6001600160a01b036101009290920a900416149392505050565b6001600160e01b03161590565b6000806301ffc9a760e01b60405181815284600482015260208160248389617530610b03610c28565b505050505093508051925050509250929050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610b4f578086015182820160400152602001610b34565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015610bd757600082820152602001610bc0565b505050565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020610bc0565b638540661f598160e01b8152610c59565b8080831115610800575090919050565b8080831015610800575090919050565b836004820152846024820152606060448201528660648201526084810160005b88811015610c91578088015182820152602001610c79565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af15059610ce68d3d610c49565b8c01610cf28187610c39565b5b82811015610d075760008152602001610cf3565b50929c50505050505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020610bc0565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b600081526020610bc056",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA41E7D51 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA41E7D51 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xAABBB8CA EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xB7056765 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xF712F3E8 EQ PUSH2 0x2CF JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x29965A1D EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3D584063 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x5DF8122F EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x65BA36C1 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9C PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 PUSH2 0xBB PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x30E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 PUSH2 0xFC PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 PUSH2 0x147 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 PUSH2 0x17E PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1A2 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1BD PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 PUSH2 0x1E8 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 PUSH2 0x224 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x806 JUMP JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 PUSH2 0x263 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8DB JUMP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 PUSH2 0x298 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2EB PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x325 JUMPI DUP4 PUSH2 0x32E JUMP JUMPDEST GAS PUSH2 0x32E PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP GAS PUSH2 0x339 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34B DUP3 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x39D PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x3A9 DUP4 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206E6F7420626520616E204552433136352068617368000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x400 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x435 JUMPI POP GAS PUSH2 0x41F PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x249CB3FA DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x4C4 PUSH2 0xBDC JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4D6 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x4E3 PUSH2 0xC28 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x4FF PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 PUSH2 0x51E PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP4 SWAP1 SWAP4 EQ SWAP3 POP PUSH2 0x589 SWAP2 POP POP JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6573206E6F7420696D706C656D656E742074686520696E74657266616365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x586 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x5BD PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x5DF PUSH2 0xD5F JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x93BAA6EFBD2244243BFEE6CE4CFDD1D04FC4C0E9A786ABD3A41313BD352DB153 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x64D PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x673 JUMPI POP DUP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x696 PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST GAS PUSH2 0x6B7 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C9 DUP4 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A34329036B0B730B3B2B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x71B PUSH2 0xB17 JUMP JUMPDEST POP POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x73D JUMPI DUP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x763 PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x785 PUSH2 0xD5F JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x605C2DBF762E5F7D60A546D42E7205DCB1B011EBC62A61736A57C9089D3A4350 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP4 POP PUSH1 0x40 SWAP3 POP POP POP MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x810 DUP3 DUP3 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x81B JUMPI PUSH1 0x0 PUSH2 0x81D JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x85A PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x87C PUSH2 0xD5F JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x8BF PUSH2 0xD13 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x8D4 PUSH2 0xD5F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x8F3 JUMPI DUP4 PUSH2 0x8FC JUMP JUMPDEST GAS PUSH2 0x8FC PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP PUSH2 0x907 DUP4 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0x92D JUMPI DUP3 PUSH2 0x917 DUP3 DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x922 JUMPI PUSH1 0x0 PUSH2 0x924 JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x95F PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x98D DUP6 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x99D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST PUSH2 0x9BF DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x9D0 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST PUSH2 0x9EA DUP6 DUP6 PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 EQ DUP1 ISZERO PUSH2 0x9FF JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0xA0F JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x800 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xA57 PUSH2 0xD13 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA76 JUMPI PUSH2 0xA6F DUP4 DUP4 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xAB3 PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 DUP10 PUSH2 0x7530 PUSH2 0xB03 PUSH2 0xC28 JUMP JUMPDEST POP POP POP POP POP SWAP4 POP DUP1 MLOAD SWAP3 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xB4F JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB34 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBC0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x8435035B MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xC59 JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0x800 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0x800 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0xC91 JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC79 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0xCE6 DUP14 RETURNDATASIZE PUSH2 0xC49 JUMP JUMPDEST DUP13 ADD PUSH2 0xCF2 DUP2 DUP8 PUSH2 0xC39 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD07 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF3 JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0xBC0 JUMP ",
              "sourceMap": "1777:8732:0:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4286:785;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;4286:785:0;;;;;;;;;;;;;;;;;:::i;:::-;;5835:273;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;5835:273:0;-1:-1:-1;;;;;5835:273:0;;:::i;:::-;;;-1:-1:-1;;;;;5835:273:0;;;;;;;;;;;;;;5395:265;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;5395:265:0;;;;;;;;;;:::i;6299:153::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;6299:153:0;;-1:-1:-1;6299:153:0;-1:-1:-1;6299:153:0;:::i;:::-;;;;;;;;;;;;;;;6825:280;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;6825:280:0;;-1:-1:-1;;;;;6825:280:0;;;;;-1:-1:-1;;;;;;6825:280:0;;:::i;3198:442::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;3198:442:0;;;;;;;;:::i;8283:618::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;8283:618:0;;-1:-1:-1;;;;;8283:618:0;;;;;-1:-1:-1;;;;;;8283:618:0;;:::i;:::-;;;;;;;;;;;;;;;;;7649:316;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;7649:316:0;;-1:-1:-1;;;;;7649:316:0;;;;;-1:-1:-1;;;;;;7649:316:0;;:::i;4286:785::-;4399:12;-1:-1:-1;;;;;4414:19:0;;;:40;;4449:5;4414:40;;;4436:10;;;:::i;:::-;4399:55;;4492:10;;;:::i;:::-;-1:-1:-1;;;;;4472:30:0;:16;4483:4;4472:10;:16::i;:::-;-1:-1:-1;;;;;4472:30:0;;4464:58;;;;-1:-1:-1;;;4464:58:0;;;;;;;;;;;;-1:-1:-1;;;4464:58:0;;;;;;;;;;;;;;:::i;:::-;;;;4542:33;4560:14;4542:17;:33::i;:::-;4541:34;4533:73;;;;-1:-1:-1;;;4533:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;4620:26:0;;;;;;:56;;;4666:10;;;:::i;:::-;-1:-1:-1;;;;;4650:26:0;:12;-1:-1:-1;;;;;4650:26:0;;;4620:56;4616:318;;;1973:40;;-1:-1:-1;;;1973:40:0;;;;;;;;;;;;;;;;;;1963:51;;;;;;4745:12;-1:-1:-1;;;;;4717:94:0;;4812:14;4828:4;4717:116;;-1:-1:-1;;;;;;4717:116:0;;;;;;;;;;;;;;-1:-1:-1;;;;;4717:116:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:140;;;;;-1:-1:-1;4692:231:0;;-1:-1:-1;;4692:231:0;;;-1:-1:-1;;;4692:231:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;4943:16:0;;:10;:16;;;;;;;4978:12;;4943:16;;;:32;;;;;;;;;;;;:47;;;;:::i;:::-;;-1:-1:-1;;;;;4943:47:0;;;;;-1:-1:-1;;;;;4943:47:0;;;;;;:::i;:::-;;;;5051:12;-1:-1:-1;;;;;5005:59:0;5035:14;5029:4;-1:-1:-1;;;;;5005:59:0;;;;;;;;;;;4286:785;;;;:::o;5835:273::-;-1:-1:-1;;;;;5981:15:0;;5890:7;5981:15;;;:8;:15;;5890:7;5981:15;5890:7;5981:15;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;5981:15:0;-1:-1:-1;;;;;5981:29:0;;5977:125;;;-1:-1:-1;6033:5:0;6026:12;;5977:125;-1:-1:-1;;;;;6076:15:0;;;;;;:8;:15;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;6076:15:0;6069:22;;5977:125;5835:273;;;:::o;5395:265::-;5499:10;;;:::i;:::-;-1:-1:-1;;;;;5478:31:0;:17;5489:5;5478:10;:17::i;:::-;-1:-1:-1;;;;;5478:31:0;;5470:59;;;;-1:-1:-1;;;5470:59:0;;;;;;;;;;;;-1:-1:-1;;;5470:59:0;;;;;;;;;;;;;;:::i;:::-;;;;5572:5;-1:-1:-1;;;;;5557:20:0;:11;-1:-1:-1;;;;;5557:20:0;;:47;;5593:11;5557:47;;;5588:1;5557:47;-1:-1:-1;;;;;5539:15:0;;;;;;:8;:15;;;;;:65;;;;:::i;:::-;;-1:-1:-1;;;;;5539:65:0;;;;;-1:-1:-1;;;;;5539:65:0;;;;;;:::i;:::-;;;;5641:11;-1:-1:-1;;;;;5619:34:0;5634:5;-1:-1:-1;;;;;5619:34:0;;;;;;;;;;;5395:265;;:::o;6299:153::-;6376:7;6429:14;;6412:32;;;;;;;;;;;;;;;;-1:-1:-1;6412:32:0;;-1:-1:-1;;;6412:32:0;;;;;;;;;;;6402:43;;;;;;6395:50;;6299:153;;;;;:::o;6825:280::-;6949:70;6995:9;7006:12;6949:32;:70::i;:::-;:95;;7042:1;6949:95;;;7022:9;6949:95;-1:-1:-1;;;;;6911:21:0;;:10;:21;;;;;;;;;;-1:-1:-1;;;;;;6911:35:0;;;;;;;;;;;;;;:133;;;;:::i;:::-;;-1:-1:-1;;;;;6911:133:0;;;;;-1:-1:-1;;;;;6911:133:0;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;7054:23:0;;;;;;:12;:23;;7094:4;;7054:23;;;-1:-1:-1;;;;;;7054:37:0;;;;;;;;;;;;;;:44;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;6825:280;;:::o;3198:442::-;3293:7;;-1:-1:-1;;;;;3327:19:0;;;:40;;3362:5;3327:40;;;3349:10;;;:::i;:::-;3312:55;;3381:33;3399:14;3381:17;:33::i;:::-;3377:208;;;3466:14;3502:52;3528:4;3466:14;3502:25;:52::i;:::-;:72;;3572:1;3502:72;;;3557:4;3502:72;3495:79;;;;;;3377:208;-1:-1:-1;;;;;3601:16:0;;:10;:16;;;;;;;;;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;3601:32:0;3594:39;;;3198:442;;;;:::o;8283:618::-;8386:4;;;8472:32;8484:9;-1:-1:-1;;;8472:11:0;:32::i;:::-;8452:52;;-1:-1:-1;8452:52:0;-1:-1:-1;8518:12:0;;;:27;;-1:-1:-1;8534:11:0;;8518:27;8514:70;;;8568:5;8561:12;;;;;;8514:70;8614:34;8626:9;-1:-1:-1;;;;;;8614:11:0;:34::i;:::-;8594:54;;-1:-1:-1;8594:54:0;-1:-1:-1;8662:12:0;;;:27;;-1:-1:-1;8678:11:0;;;8662:27;8658:70;;;8712:5;8705:12;;;;;;8658:70;8758:36;8770:9;8781:12;8758:11;:36::i;:::-;8738:56;;-1:-1:-1;8738:56:0;-1:-1:-1;8819:1:0;8808:12;;:27;;;;;8824:6;8834:1;8824:11;8808:27;8804:69;;;8858:4;8851:11;;;;;;8804:69;-1:-1:-1;8889:5:0;;8283:618;-1:-1:-1;;;;8283:618:0:o;7649:316::-;-1:-1:-1;;;;;7766:23:0;;7745:4;7766:23;;;:12;:23;;;7745:4;7766:23;-1:-1:-1;;;;;;7766:37:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;7761:133;;7826:57;7859:9;7870:12;7826:32;:57::i;:::-;7819:64;;;;7761:133;-1:-1:-1;;;;;7910:48:0;;:10;:21;;;;;;;;;;-1:-1:-1;;;;;;7910:35:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7910:35:0;;;;;;;;:48;;7649:316;-1:-1:-1;;;7649:316:0:o;9156:192::-;-1:-1:-1;;;;;9253:83:0;:88;;9156:192::o;9442:1065::-;9534:15;;-1:-1:-1;;;9656:4:0;9650:11;9757:8;9754:1;9747:19;9864:12;9857:4;9854:1;9850:12;9843:34;10351:4;10263:1;10179:4;10097:1;10039:9;9981:5;9953:471;;:::i;:::-;;;;;;9942:482;;10454:1;10448:8;10438:18;;;9627:874;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "getInterfaceImplementer(address,bytes32)": "aabbb8ca",
              "getManager(address)": "3d584063",
              "implementsERC165Interface(address,bytes4)": "f712f3e8",
              "implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
              "interfaceHash(string)": "65ba36c1",
              "setInterfaceImplementer(address,bytes32,address)": "29965a1d",
              "setManager(address,address)": "5df8122f",
              "updateERC165Cache(address,bytes4)": "a41e7d51"
            }
          },
          "storageLayout": {
            "storage": [
              {
                "astId": 34,
                "contract": "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol:ERC1820Registry",
                "label": "interfaces",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_address))"
              },
              {
                "astId": 38,
                "contract": "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol:ERC1820Registry",
                "label": "managers",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 44,
                "contract": "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol:ERC1820Registry",
                "label": "erc165Cached",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_bytes4": {
                "encoding": "inplace",
                "label": "bytes4",
                "numberOfBytes": "4"
              },
              "t_mapping(t_address,t_address)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_address,t_mapping(t_bytes32,t_address))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(bytes32 => address))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_bytes32,t_address)"
              },
              "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(bytes4 => bool))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_bytes4,t_bool)"
              },
              "t_mapping(t_bytes32,t_address)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_bytes4,t_bool)": {
                "encoding": "mapping",
                "key": "t_bytes4",
                "label": "mapping(bytes4 => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              }
            }
          }
        }
      }
    },
    "sources": {
      "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol": {
        "ast": {
          "absolutePath": "contracts/optimistic-ethereum/OVM/precompiles/ERC1820Registry.sol",
          "exportedSymbols": {
            "ERC1820ImplementerInterface": [
              13
            ],
            "ERC1820Registry": [
              454
            ]
          },
          "id": 455,
          "license": "CC0-1.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">",
                "0.5",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "755:30:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "787:139:0",
                "text": "@dev The interface a contract MUST implement if it is the implementer of\n some (other) interface for any address other than itself."
              },
              "fullyImplemented": false,
              "id": 13,
              "linearizedBaseContracts": [
                13
              ],
              "name": "ERC1820ImplementerInterface",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "970:376:0",
                    "text": "@notice Indicates whether the contract implements the interface 'interfaceHash' for the address 'addr' or not.\n @param interfaceHash keccak256 hash of the name of the interface\n @param addr Address for which the contract will implement the interface\n @return ERC1820_ACCEPT_MAGIC only if the contract implements 'interfaceHash' for the address 'addr'."
                  },
                  "functionSelector": "249cb3fa",
                  "id": 12,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canImplementInterfaceForAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "interfaceHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "1392:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1392:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "1415:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1415:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1391:37:0"
                  },
                  "returnParameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "1451:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1451:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1450:9:0"
                  },
                  "scope": 13,
                  "src": "1351:109:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 455,
              "src": "926:536:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 14,
                "nodeType": "StructuredDocumentation",
                "src": "1464:312:0",
                "text": " @title ERC1820 Pseudo-introspection Registry Contract\n @author Jordi Baylina and Jacques Dafflon\n @dev This contract is the official implementation of the ERC1820 Registry \n For more details, see https://eips.ethereum.org/EIPS/eip-1820\n Compiler used: optimistic-solc\n Runtime target: OVM"
              },
              "fullyImplemented": true,
              "id": 454,
              "linearizedBaseContracts": [
                454
              ],
              "name": "ERC1820Registry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 17,
                  "mutability": "constant",
                  "name": "INVALID_ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "1808:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30786666666666666666",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1846:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "0xffffffff"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 20,
                  "mutability": "constant",
                  "name": "ERC165ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "1862:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783031666663396137",
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1898:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_33540519_by_1",
                      "typeString": "int_const 33540519"
                    },
                    "value": "0x01ffc9a7"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 28,
                  "mutability": "constant",
                  "name": "ERC1820_ACCEPT_MAGIC",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "1914:100:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "455243313832305f4143434550545f4d41474943",
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1990:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                              "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                            },
                            "value": "ERC1820_ACCEPT_MAGIC"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                              "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                            }
                          ],
                          "expression": {
                            "id": 23,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1973:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1973:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1973:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1963:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "interfaces",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "2021:67:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$",
                    "typeString": "mapping(address => mapping(bytes32 => address))"
                  },
                  "typeName": {
                    "id": 33,
                    "keyType": {
                      "id": 29,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2029:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2021:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$",
                      "typeString": "mapping(address => mapping(bytes32 => address))"
                    },
                    "valueType": {
                      "id": 32,
                      "keyType": {
                        "id": 30,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2048:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "2040:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      },
                      "valueType": {
                        "id": 31,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2059:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "managers",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "2094:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 37,
                    "keyType": {
                      "id": 35,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2102:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2094:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 36,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2113:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "erc165Cached",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "2145:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                    "typeString": "mapping(address => mapping(bytes4 => bool))"
                  },
                  "typeName": {
                    "id": 43,
                    "keyType": {
                      "id": 39,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2145:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                      "typeString": "mapping(address => mapping(bytes4 => bool))"
                    },
                    "valueType": {
                      "id": 42,
                      "keyType": {
                        "id": 40,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2172:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "2164:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      },
                      "valueType": {
                        "id": 41,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2182:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "2217:84:0",
                    "text": "@notice Indicates a contract is the 'implementer' of 'interfaceHash' for 'addr'."
                  },
                  "id": 53,
                  "name": "InterfaceImplementerSet",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "2336:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2336:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "interfaceHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "2358:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementer",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "2389:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2389:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2335:82:0"
                  },
                  "src": "2306:112:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 54,
                    "nodeType": "StructuredDocumentation",
                    "src": "2423:80:0",
                    "text": "@notice Indicates 'newManager' is the address of the new manager for 'addr'."
                  },
                  "id": 60,
                  "name": "ManagerChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "2529:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2529:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "2551:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2551:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2528:50:0"
                  },
                  "src": "2508:71:0"
                },
                {
                  "body": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "3302:338:0",
                    "statements": [
                      {
                        "assignments": [
                          71
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 71,
                            "mutability": "mutable",
                            "name": "addr",
                            "nodeType": "VariableDeclaration",
                            "scope": 112,
                            "src": "3312:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 70,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3312:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 82,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 72,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "3327:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 75,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3344:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3336:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3336:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3336:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "3327:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 80,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "3362:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3327:40:0",
                          "trueExpression": {
                            "expression": {
                              "id": 78,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3349:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3349:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3312:55:0"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 84,
                              "name": "_interfaceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "3399:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 83,
                            "name": "isERC165Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3381:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32) pure returns (bool)"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3381:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 105,
                        "nodeType": "IfStatement",
                        "src": "3377:208:0",
                        "trueBody": {
                          "id": 104,
                          "nodeType": "Block",
                          "src": "3416:169:0",
                          "statements": [
                            {
                              "assignments": [
                                87
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 87,
                                  "mutability": "mutable",
                                  "name": "erc165InterfaceHash",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 104,
                                  "src": "3430:26:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 86,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3430:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 92,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 90,
                                    "name": "_interfaceHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "3466:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 89,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3459:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes4_$",
                                    "typeString": "type(bytes4)"
                                  },
                                  "typeName": {
                                    "id": 88,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3459:6:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3459:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3430:51:0"
                            },
                            {
                              "expression": {
                                "condition": {
                                  "arguments": [
                                    {
                                      "id": 94,
                                      "name": "addr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 71,
                                      "src": "3528:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 95,
                                      "name": "erc165InterfaceHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 87,
                                      "src": "3534:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 93,
                                    "name": "implementsERC165Interface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 341,
                                    "src": "3502:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                      "typeString": "function (address,bytes4) view returns (bool)"
                                    }
                                  },
                                  "id": 96,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3502:52:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3572:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 99,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3564:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 98,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3564:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3564:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "3502:72:0",
                                "trueExpression": {
                                  "id": 97,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71,
                                  "src": "3557:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 69,
                              "id": 103,
                              "nodeType": "Return",
                              "src": "3495:79:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 106,
                              "name": "interfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3601:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => address))"
                              }
                            },
                            "id": 108,
                            "indexExpression": {
                              "id": 107,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "3612:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3601:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 110,
                          "indexExpression": {
                            "id": 109,
                            "name": "_interfaceHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "3618:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3601:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 69,
                        "id": 111,
                        "nodeType": "Return",
                        "src": "3594:39:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "2585:608:0",
                    "text": "@notice Query if an address implements an interface and through which contract.\n @param _addr Address being queried for the implementer of an interface.\n (If '_addr' is the zero address then 'msg.sender' is assumed.)\n @param _interfaceHash Keccak256 hash of the name of the interface as a string.\n E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n @return The address of the contract which implements the interface '_interfaceHash' for '_addr'\n or '0' if '_addr' did not register an implementer for this interface."
                  },
                  "functionSelector": "aabbb8ca",
                  "id": 113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInterfaceImplementer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "3231:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3231:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "_interfaceHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "3246:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3246:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3230:39:0"
                  },
                  "returnParameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 68,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "3293:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 67,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3293:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3292:9:0"
                  },
                  "scope": 454,
                  "src": "3198:442:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 194,
                    "nodeType": "Block",
                    "src": "4389:682:0",
                    "statements": [
                      {
                        "assignments": [
                          124
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 124,
                            "mutability": "mutable",
                            "name": "addr",
                            "nodeType": "VariableDeclaration",
                            "scope": 194,
                            "src": "4399:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 123,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4399:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 125,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "4414:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4431:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4423:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 126,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4423:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4423:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "4414:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 133,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "4449:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4414:40:0",
                          "trueExpression": {
                            "expression": {
                              "id": 131,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4436:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4436:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4399:55:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 138,
                                    "name": "addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 124,
                                    "src": "4483:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 137,
                                  "name": "getManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "4472:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) view returns (address)"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4472:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 140,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4492:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4492:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4472:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420746865206d616e61676572",
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4504:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2",
                                "typeString": "literal_string \"Not the manager\""
                              },
                              "value": "Not the manager"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2",
                                "typeString": "literal_string \"Not the manager\""
                              }
                            ],
                            "id": 136,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4464:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4464:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4464:58:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4541:34:0",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 148,
                                    "name": "_interfaceHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 118,
                                    "src": "4560:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 147,
                                  "name": "isERC165Interface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 435,
                                  "src": "4542:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$",
                                    "typeString": "function (bytes32) pure returns (bool)"
                                  }
                                },
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4542:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d757374206e6f7420626520616e204552433136352068617368",
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4577:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7dd17e3bdc8c01861fedac2891b332ca9e60a72297f10c299d56bc0c5395549d",
                                "typeString": "literal_string \"Must not be an ERC165 hash\""
                              },
                              "value": "Must not be an ERC165 hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7dd17e3bdc8c01861fedac2891b332ca9e60a72297f10c299d56bc0c5395549d",
                                "typeString": "literal_string \"Must not be an ERC165 hash\""
                              }
                            ],
                            "id": 146,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4533:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4533:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "4533:73:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 154,
                              "name": "_implementer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "4620:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4644:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4636:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 155,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4636:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4636:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "4620:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 160,
                              "name": "_implementer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "4650:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 161,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4666:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4666:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "4650:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4620:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 179,
                        "nodeType": "IfStatement",
                        "src": "4616:318:0",
                        "trueBody": {
                          "id": 178,
                          "nodeType": "Block",
                          "src": "4678:256:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 174,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 170,
                                          "name": "_interfaceHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 118,
                                          "src": "4812:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 171,
                                          "name": "addr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 124,
                                          "src": "4828:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 167,
                                              "name": "_implementer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 120,
                                              "src": "4745:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 166,
                                            "name": "ERC1820ImplementerInterface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13,
                                            "src": "4717:27:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC1820ImplementerInterface_$13_$",
                                              "typeString": "type(contract ERC1820ImplementerInterface)"
                                            }
                                          },
                                          "id": 168,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4717:41:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC1820ImplementerInterface_$13",
                                            "typeString": "contract ERC1820ImplementerInterface"
                                          }
                                        },
                                        "id": 169,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "canImplementInterfaceForAddress",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 12,
                                        "src": "4717:94:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes32,address) view external returns (bytes32)"
                                        }
                                      },
                                      "id": 172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4717:116:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 173,
                                      "name": "ERC1820_ACCEPT_MAGIC",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28,
                                      "src": "4837:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "4717:140:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "446f6573206e6f7420696d706c656d656e742074686520696e74657266616365",
                                    "id": 175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4875:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c92cae19700c9af80bbef3a32b31347feeed2544373f4066d22ba2f8466a32b0",
                                      "typeString": "literal_string \"Does not implement the interface\""
                                    },
                                    "value": "Does not implement the interface"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c92cae19700c9af80bbef3a32b31347feeed2544373f4066d22ba2f8466a32b0",
                                      "typeString": "literal_string \"Does not implement the interface\""
                                    }
                                  ],
                                  "id": 165,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4692:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4692:231:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 177,
                              "nodeType": "ExpressionStatement",
                              "src": "4692:231:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 180,
                                "name": "interfaces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "4943:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => address))"
                                }
                              },
                              "id": 183,
                              "indexExpression": {
                                "id": 181,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "4954:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4943:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "id": 182,
                              "name": "_interfaceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "4960:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4943:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 185,
                            "name": "_implementer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "4978:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4943:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "4943:47:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 189,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "5029:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 190,
                              "name": "_interfaceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "5035:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 191,
                              "name": "_implementer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "5051:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 188,
                            "name": "InterfaceImplementerSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "5005:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (address,bytes32,address)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5005:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "EmitStatement",
                        "src": "5000:64:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 114,
                    "nodeType": "StructuredDocumentation",
                    "src": "3646:635:0",
                    "text": "@notice Sets the contract which implements a specific interface for an address.\n Only the manager defined for that address can set it.\n (Each address is the manager for itself until it sets a new manager.)\n @param _addr Address for which to set the interface.\n (If '_addr' is the zero address then 'msg.sender' is assumed.)\n @param _interfaceHash Keccak256 hash of the name of the interface as a string.\n E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n @param _implementer Contract address implementing '_interfaceHash' for '_addr'."
                  },
                  "functionSelector": "29965a1d",
                  "id": 195,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setInterfaceImplementer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "4319:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4319:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "_interfaceHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "4334:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4334:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "_implementer",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "4358:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4358:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4318:61:0"
                  },
                  "returnParameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4389:0:0"
                  },
                  "scope": 454,
                  "src": "4286:785:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "5460:200:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 205,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "5489:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 204,
                                  "name": "getManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "5478:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) view returns (address)"
                                  }
                                },
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 207,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5499:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5499:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5478:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420746865206d616e61676572",
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5511:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2",
                                "typeString": "literal_string \"Not the manager\""
                              },
                              "value": "Not the manager"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_05d265f35446405bb8e248c5b20b42f74b593c053f831f072952d663e40433c2",
                                "typeString": "literal_string \"Not the manager\""
                              }
                            ],
                            "id": 203,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5470:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5470:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 212,
                        "nodeType": "ExpressionStatement",
                        "src": "5470:59:0"
                      },
                      {
                        "expression": {
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 213,
                              "name": "managers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "5539:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 215,
                            "indexExpression": {
                              "id": 214,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5548:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5539:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 216,
                                "name": "_newManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 200,
                                "src": "5557:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 217,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "5572:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5557:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 223,
                              "name": "_newManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "5593:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "5557:47:0",
                            "trueExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5588:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5580:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 219,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5580:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5580:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5539:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 226,
                        "nodeType": "ExpressionStatement",
                        "src": "5539:65:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 228,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5634:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 229,
                              "name": "_newManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "5641:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 227,
                            "name": "ManagerChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "5619:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5619:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "EmitStatement",
                        "src": "5614:39:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "5077:313:0",
                    "text": "@notice Sets '_newManager' as manager for '_addr'.\n The new manager will be able to call 'setInterfaceImplementer' for '_addr'.\n @param _addr Address for which to set the new manager.\n @param _newManager Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)"
                  },
                  "functionSelector": "5df8122f",
                  "id": 233,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "5415:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5415:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "_newManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "5430:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5430:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5414:36:0"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5460:0:0"
                  },
                  "scope": 454,
                  "src": "5395:265:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "5899:209:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 241,
                              "name": "managers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "5981:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 243,
                            "indexExpression": {
                              "id": 242,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "5990:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5981:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6008:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6000:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 244,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6000:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6000:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5981:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 256,
                          "nodeType": "Block",
                          "src": "6055:47:0",
                          "statements": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 252,
                                  "name": "managers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "6076:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 254,
                                "indexExpression": {
                                  "id": 253,
                                  "name": "_addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 236,
                                  "src": "6085:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6076:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 240,
                              "id": 255,
                              "nodeType": "Return",
                              "src": "6069:22:0"
                            }
                          ]
                        },
                        "id": 257,
                        "nodeType": "IfStatement",
                        "src": "5977:125:0",
                        "trueBody": {
                          "id": 251,
                          "nodeType": "Block",
                          "src": "6012:37:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 249,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "6033:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 240,
                              "id": 250,
                              "nodeType": "Return",
                              "src": "6026:12:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "5666:164:0",
                    "text": "@notice Get the manager of an address.\n @param _addr Address for which to return the manager.\n @return Address of the manager for a given address."
                  },
                  "functionSelector": "3d584063",
                  "id": 259,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5855:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5855:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5854:15:0"
                  },
                  "returnParameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 239,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5890:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5890:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5889:9:0"
                  },
                  "scope": 454,
                  "src": "5835:273:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 274,
                    "nodeType": "Block",
                    "src": "6385:67:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 270,
                                  "name": "_interfaceName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 262,
                                  "src": "6429:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 268,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6412:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6412:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6412:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 267,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6402:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6402:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 266,
                        "id": 273,
                        "nodeType": "Return",
                        "src": "6395:50:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "6114:180:0",
                    "text": "@notice Compute the keccak256 hash of an interface given its name.\n @param _interfaceName Name of the interface.\n @return The keccak256 hash of an interface name."
                  },
                  "functionSelector": "65ba36c1",
                  "id": 275,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "interfaceHash",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "_interfaceName",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "6322:30:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6322:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6321:32:0"
                  },
                  "returnParameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "6376:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6376:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6375:9:0"
                  },
                  "scope": 454,
                  "src": "6299:153:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 308,
                    "nodeType": "Block",
                    "src": "6901:204:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 283,
                                "name": "interfaces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "6911:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => address))"
                                }
                              },
                              "id": 286,
                              "indexExpression": {
                                "id": 284,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 278,
                                "src": "6922:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6911:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 287,
                            "indexExpression": {
                              "id": 285,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "6933:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6911:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "arguments": [
                                {
                                  "id": 289,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 278,
                                  "src": "6995:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 290,
                                  "name": "_interfaceId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "7006:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 288,
                                "name": "implementsERC165InterfaceNoCache",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 420,
                                "src": "6949:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (address,bytes4) view returns (bool)"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6949:70:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7042:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7034:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 293,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7034:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7034:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "6949:95:0",
                            "trueExpression": {
                              "id": 292,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "7022:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6911:133:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "6911:133:0"
                      },
                      {
                        "expression": {
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 300,
                                "name": "erc165Cached",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "7054:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes4 => bool))"
                                }
                              },
                              "id": 303,
                              "indexExpression": {
                                "id": 301,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 278,
                                "src": "7067:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7054:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                "typeString": "mapping(bytes4 => bool)"
                              }
                            },
                            "id": 304,
                            "indexExpression": {
                              "id": 302,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "7078:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7054:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7094:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7054:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "7054:44:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 276,
                    "nodeType": "StructuredDocumentation",
                    "src": "6570:250:0",
                    "text": "@notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param _contract Address of the contract for which to update the cache.\n @param _interfaceId ERC165 interface for which to update the cache."
                  },
                  "functionSelector": "a41e7d51",
                  "id": 309,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateERC165Cache",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "6852:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6852:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "_interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "6871:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "6871:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6851:40:0"
                  },
                  "returnParameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6901:0:0"
                  },
                  "scope": 454,
                  "src": "6825:280:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 340,
                    "nodeType": "Block",
                    "src": "7751:214:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7765:38:0",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 319,
                                "name": "erc165Cached",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "7766:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes4 => bool))"
                                }
                              },
                              "id": 321,
                              "indexExpression": {
                                "id": 320,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "7779:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7766:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                "typeString": "mapping(bytes4 => bool)"
                              }
                            },
                            "id": 323,
                            "indexExpression": {
                              "id": 322,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "7790:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7766:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 331,
                        "nodeType": "IfStatement",
                        "src": "7761:133:0",
                        "trueBody": {
                          "id": 330,
                          "nodeType": "Block",
                          "src": "7805:89:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 326,
                                    "name": "_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 312,
                                    "src": "7859:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 327,
                                    "name": "_interfaceId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 314,
                                    "src": "7870:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  ],
                                  "id": 325,
                                  "name": "implementsERC165InterfaceNoCache",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 420,
                                  "src": "7826:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                    "typeString": "function (address,bytes4) view returns (bool)"
                                  }
                                },
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7826:57:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 318,
                              "id": 329,
                              "nodeType": "Return",
                              "src": "7819:64:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 332,
                                "name": "interfaces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "7910:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => address))"
                                }
                              },
                              "id": 334,
                              "indexExpression": {
                                "id": 333,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "7921:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7910:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 336,
                            "indexExpression": {
                              "id": 335,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "7932:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7910:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 337,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "7949:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7910:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 318,
                        "id": 339,
                        "nodeType": "Return",
                        "src": "7903:55:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 310,
                    "nodeType": "StructuredDocumentation",
                    "src": "7455:189:0",
                    "text": "@param _contract Address of the contract to check.\n @param _interfaceId ERC165 interface to check.\n @return True if '_contract' implements '_interfaceId', false otherwise."
                  },
                  "functionSelector": "f712f3e8",
                  "id": 341,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementsERC165Interface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "7684:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "_interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "7703:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "7703:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7683:40:0"
                  },
                  "returnParameters": {
                    "id": 318,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 317,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "7745:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 316,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7745:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7744:6:0"
                  },
                  "scope": 454,
                  "src": "7649:316:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "8392:509:0",
                    "statements": [
                      {
                        "assignments": [
                          352
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 352,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 419,
                            "src": "8402:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 351,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8402:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 353,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8402:15:0"
                      },
                      {
                        "assignments": [
                          355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 355,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 419,
                            "src": "8427:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 354,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8427:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 356,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8427:14:0"
                      },
                      {
                        "expression": {
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 357,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 352,
                                "src": "8453:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 358,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "8462:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 359,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "8452:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 361,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "8484:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 362,
                                "name": "ERC165ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "8495:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 360,
                              "name": "noThrowCall",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "8472:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,bytes4) view returns (uint256,uint256)"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8472:32:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "8452:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "8452:52:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 366,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "8518:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8529:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8518:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 369,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "8534:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8544:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8534:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8518:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 376,
                        "nodeType": "IfStatement",
                        "src": "8514:70:0",
                        "trueBody": {
                          "id": 375,
                          "nodeType": "Block",
                          "src": "8547:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8568:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 350,
                              "id": 374,
                              "nodeType": "Return",
                              "src": "8561:12:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 377,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 352,
                                "src": "8595:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 378,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "8604:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 379,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "8594:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 381,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "8626:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 382,
                                "name": "INVALID_ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "8637:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 380,
                              "name": "noThrowCall",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "8614:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,bytes4) view returns (uint256,uint256)"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8614:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "8594:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "8594:54:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 386,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "8662:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8673:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8662:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 389,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "8678:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8688:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8678:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8662:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 396,
                        "nodeType": "IfStatement",
                        "src": "8658:70:0",
                        "trueBody": {
                          "id": 395,
                          "nodeType": "Block",
                          "src": "8691:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8712:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 350,
                              "id": 394,
                              "nodeType": "Return",
                              "src": "8705:12:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 397,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 352,
                                "src": "8739:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 398,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "8748:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 399,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "8738:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 401,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "8770:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 402,
                                "name": "_interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "8781:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 400,
                              "name": "noThrowCall",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "8758:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,bytes4) view returns (uint256,uint256)"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8758:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "8738:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "8738:56:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 406,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "8808:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8819:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8808:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 409,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "8824:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8834:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8824:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8808:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 416,
                        "nodeType": "IfStatement",
                        "src": "8804:69:0",
                        "trueBody": {
                          "id": 415,
                          "nodeType": "Block",
                          "src": "8837:36:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8858:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 350,
                              "id": 414,
                              "nodeType": "Return",
                              "src": "8851:11:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8889:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 350,
                        "id": 418,
                        "nodeType": "Return",
                        "src": "8882:12:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 342,
                    "nodeType": "StructuredDocumentation",
                    "src": "7971:307:0",
                    "text": "@notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param _contract Address of the contract to check.\n @param _interfaceId ERC165 interface to check.\n @return True if '_contract' implements '_interfaceId', false otherwise."
                  },
                  "functionSelector": "b7056765",
                  "id": 420,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementsERC165InterfaceNoCache",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "8325:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8325:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "_interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "8344:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "8344:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8324:40:0"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "8386:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8386:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8385:6:0"
                  },
                  "scope": 454,
                  "src": "8283:618:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 434,
                    "nodeType": "Block",
                    "src": "9236:112:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 428,
                              "name": "_interfaceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "9253:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "hexValue": "307830303030303030304646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9270:66:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1",
                                "typeString": "int_const 2695...(60 digits omitted)...9215"
                              },
                              "value": "0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                            },
                            "src": "9253:83:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9340:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9253:88:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 427,
                        "id": 433,
                        "nodeType": "Return",
                        "src": "9246:95:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 421,
                    "nodeType": "StructuredDocumentation",
                    "src": "8907:244:0",
                    "text": "@notice Checks whether the hash is a ERC165 interface (ending with 28 zeroes) or not.\n @param _interfaceHash The hash to check.\n @return True if '_interfaceHash' is an ERC165 interface (ending with 28 zeroes), false otherwise."
                  },
                  "id": 435,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isERC165Interface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "_interfaceHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "9183:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9183:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9182:24:0"
                  },
                  "returnParameters": {
                    "id": 427,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 426,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "9230:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 425,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9230:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9229:6:0"
                  },
                  "scope": 454,
                  "src": "9156:192:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 452,
                    "nodeType": "Block",
                    "src": "9571:936:0",
                    "statements": [
                      {
                        "assignments": [
                          448
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 448,
                            "mutability": "mutable",
                            "name": "erc165ID",
                            "nodeType": "VariableDeclaration",
                            "scope": 452,
                            "src": "9581:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 447,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "9581:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 450,
                        "initialValue": {
                          "id": 449,
                          "name": "ERC165ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "9599:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9581:26:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "9627:874:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9641:20:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9656:4:0",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9650:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9650:11:0"
                              },
                              "variables": [
                                {
                                  "name": "x",
                                  "nodeType": "YulTypedName",
                                  "src": "9645:1:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "9754:1:0"
                                  },
                                  {
                                    "name": "erc165ID",
                                    "nodeType": "YulIdentifier",
                                    "src": "9757:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9747:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9747:19:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9747:19:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "9854:1:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9857:4:0",
                                        "type": "",
                                        "value": "0x04"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9850:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9850:12:0"
                                  },
                                  {
                                    "name": "_interfaceId",
                                    "nodeType": "YulIdentifier",
                                    "src": "9864:12:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9843:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9843:34:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9843:34:0"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9942:482:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9981:5:0",
                                    "type": "",
                                    "value": "30000"
                                  },
                                  {
                                    "name": "_contract",
                                    "nodeType": "YulIdentifier",
                                    "src": "10039:9:0"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10097:1:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10179:4:0",
                                    "type": "",
                                    "value": "0x24"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10263:1:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10351:4:0",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "staticcall",
                                  "nodeType": "YulIdentifier",
                                  "src": "9953:10:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9953:471:0"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nodeType": "YulIdentifier",
                                  "src": "9942:7:0"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10438:18:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10454:1:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10448:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10448:8:0"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "10438:6:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 438,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10039:9:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 440,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9864:12:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 448,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9757:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 445,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10438:6:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 443,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9942:7:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 451,
                        "nodeType": "InlineAssembly",
                        "src": "9618:883:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 436,
                    "nodeType": "StructuredDocumentation",
                    "src": "9354:83:0",
                    "text": "@dev Make a call on a contract without throwing if the function does not exist."
                  },
                  "id": 453,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "noThrowCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "9463:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9463:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "mutability": "mutable",
                        "name": "_interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "9482:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "9482:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9462:40:0"
                  },
                  "returnParameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "9534:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9534:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 445,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "9551:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9551:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9533:33:0"
                  },
                  "scope": 454,
                  "src": "9442:1065:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 455,
              "src": "1777:8732:0"
            }
          ],
          "src": "755:9755:0"
        },
        "id": 0
      }
    }
  }
}
